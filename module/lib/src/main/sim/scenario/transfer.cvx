{:deploy [$.sim.state (lib sim state)]}


;;;;;;;;;;


(defn state


  ([state]

   (recur state
          nil))


  ([state option+]

   ($.sim.state/prepare state
                        option+)))



(defn gen.trx

  [config]

  (let [base.user   (:base.user config)
        n.user      (:n.user config)
        gen.receiver (.gen.fmap address
                                (.gen.long.uniform base.user
                                                   (dec (+ base.user
                                                           n.user))))]
    (fn [i.user]
      (let [origin (address (+ base.user
                               i.user))]
        (fn [sequence]
          (.gen.fmap (fn [receiver]
                       (.trx.new.transfer origin
                                          receiver
                                          1
                                          {:sequence sequence}))
                     gen.receiver))))))
