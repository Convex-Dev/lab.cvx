{:deploy [$.state (lib state)]}


;;;;;;;;;;


(defn state

  [state n.user]

  ($.state/user+ state
                 n.user
                 nil))



(defn gen.trx

  [config]

  (let [base.user  (:base.user config)
        n.user     (:n.user config)
        gen.target (.gen.fmap address
                              (.gen.long.uniform base.user
                                                 (dec (+ base.user
                                                         n.user))))]
    (fn [i.user]
      (when (> i.user
               n.user)
        (fail :NOBODY
              "No account for this client"))
      (let [origin (address (+ base.user
                               i.user))]
        (fn [sequence]
          (.gen.fmap (fn [target]
                       (.trx.new.transfer origin
                                          target
                                          1
                                          {:sequence sequence}))
                     gen.target))))))
