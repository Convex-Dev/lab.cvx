{:deploy [$.sim.state (lib sim state)]}


;;;;;;;;;;


(defn state

  [state n.user]

  ($.sim.state/prepare state
                       n.user))



(defn gen.trx

  [config]

  (let [base.user  (:base.user config)
        n.user     (:n.user config)
        gen.target (.gen.fmap address
                              (.gen.long.uniform base.user
                                                 (dec (+ base.user
                                                         n.user))))]
    (fn [i.user]
      (let [origin (address (+ base.user
                               i.user))]
        (fn [sequence]
          (.gen.fmap (fn [target]
                       (.trx.new.transfer origin
                                          target
                                          1
                                          {:sequence sequence}))
                     gen.target))))))
