{:deploy [$.state (lib state)]}


;;;;;;;;;;


(defn state

  [state n.user]

  ($.state/user+ state
                 n.user
                 nil))



(defn gen.trx

  [config]

  (let [base.user (:base.user config)
        n.user    (:n.user config)]
    (fn [i.user]
      (when (> i.user
               n.user)
        (fail :NOBODY
              "No account for this client"))
      (let [origin (address (+ base.user
                               i.user))]
        (fn [sequence]
          (.gen.always (.trx.new.invoke origin
                                        nil
                                        {:sequence sequence})))))))
